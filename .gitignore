# Created by https://www.toptal.com/developers/gitignore/api/flask
# Edit at https://www.toptal.com/developers/gitignore?templates=flask

### Flask ###
instance/*
!instance/.gitignore
.webassets-cache
.env

### Flask.Python Stack ###
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
.DS_Store
*/*/.DS_Store
*/*/secret.yaml


# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST


# Installer logs
pip-log.txt
pip-delete-this-directory.txt



# Flask stuff:
instance/



# Environments
.venv
env/
venv/
ENV/
env.bak/
venv.bak/


# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/
*/*/tls.*



### Terraform ###
# Local .terraform directories
**/.terraform/*

# .tfstate files
*/*.tfstate
*/*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*/*.tfvars
*/*.tfvars.json
*/*/variables.tfvars
# Ignore override files as they are usually used to override resources locally and so
# are not checked in
*/override.tf
override.tf.json
*/*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
*/.terraformrc
*/terraform.rc

# End of https://www.toptal.com/developers/gitignore/api/terraform